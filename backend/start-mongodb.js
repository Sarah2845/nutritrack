/**
 * Script de d√©marrage avec MongoDB pour NutriTrack
 * 
 * Ce script vous permet de d√©marrer l'application avec MongoDB
 * en configurant les variables d'environnement n√©cessaires.
 */

// Configuration MongoDB - MODIFIEZ CES VALEURS selon votre installation
// URI pour MongoDB local (par d√©faut)
const MONGODB_URI = 'mongodb://localhost:27017/nutritrack';

// Ou URI pour MongoDB Atlas (d√©commentez et personnalisez si vous utilisez Atlas)
// const MONGODB_URI = 'mongodb+srv://username:password@clusterXXX.mongodb.net/nutritrack';

// Configuration de l'application
process.env.MONGODB_URI = MONGODB_URI;
process.env.JWT_SECRET = 'nutritrack-secret-key-2025';
process.env.JWT_EXPIRE = '30d';
process.env.JWT_COOKIE_EXPIRE = '30';

console.log('üîê Configuration de l\'application charg√©e');
console.log(`üîå Tentative de connexion √† MongoDB: ${MONGODB_URI}`);

// Tester la connexion MongoDB avant de d√©marrer le serveur
const mongoose = require('mongoose');

// Options de connexion
const options = {
  // Note: Ces options sont maintenant par d√©faut dans Mongoose 6+
  // useNewUrlParser: true,
  // useUnifiedTopology: true,
};

// Tenter de se connecter √† MongoDB
mongoose.connect(MONGODB_URI, options)
  .then(() => {
    console.log('‚úÖ Connexion MongoDB √©tablie avec succ√®s');
    console.log('üöÄ D√©marrage du serveur NutriTrack...');
    
    // D√©marrer le serveur NutriTrack
    require('./src/server.js');
  })
  .catch(err => {
    console.error('‚ùå Erreur de connexion MongoDB:', err.message);
    console.log('\nüîç D√âPANNAGE:');
    console.log('1. V√©rifiez que MongoDB est install√© et en cours d\'ex√©cution');
    console.log('2. Si vous utilisez MongoDB Atlas, v√©rifiez votre nom d\'utilisateur/mot de passe');
    console.log('3. V√©rifiez que l\'URI MongoDB est correct');
    console.log('\n‚ö†Ô∏è Si vous n\'avez pas MongoDB, utilisez plut√¥t la commande:');
    console.log('   node local-server.js');
    
    process.exit(1);
  });
